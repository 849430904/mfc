
// SendPostDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "SendPost.h"
#include "SendPostDlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif

const int UM_TEST (WM_USER + 100);

// CSendPostDlg 对话框



CSendPostDlg::CSendPostDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(IDD_SENDPOST_DIALOG, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CSendPostDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CSendPostDlg, CDialogEx)
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_SEND, &CSendPostDlg::OnBnClickedSend)
	ON_BN_CLICKED(IDC_POST, &CSendPostDlg::OnBnClickedPost)
	ON_WM_CLOSE()
	ON_MESSAGE(UM_TEST, &CSendPostDlg::OnUmtest)
END_MESSAGE_MAP()


// CSendPostDlg 消息处理程序

BOOL CSendPostDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CSendPostDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CSendPostDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CSendPostDlg::OnBnClickedSend()
{
	LRESULT res = SendMessage(UM_TEST, 1, 2);
}


void CSendPostDlg::OnBnClickedPost()
{
	BOOL a = PostMessage(UM_TEST, 1, 2);
	//BOOL a = PostMessage(WM_CLOSE);
}


void CSendPostDlg::OnClose()
{
	if(AfxMessageBox(_T("确定要关闭？"),MB_YESNO | MB_ICONQUESTION) == IDYES)
		CDialogEx::OnClose();
}


afx_msg LRESULT CSendPostDlg::OnUmtest(WPARAM wParam, LPARAM lParam)
{
	return wParam + lParam;
}
